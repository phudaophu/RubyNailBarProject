@page "/customers"


@inject ContainerStorage ContainerStorage
@rendermode InteractiveServer
<h3>Customers</h3>


@* <SearchBarComponent SearchUsersCallBack="HandleSearchUser" OnClearSearchBarCallBack="HandleClearSearchBar" @ref="searchBarComponent">
    <ElementControl>
        <a class="btn btn-outline-secondary" href="/user"> Add User </a>
    </ElementControl>
</SearchBarComponent> *@



 <CustomerListComponent></CustomerListComponent>

@* <PaginationComponent TotalPages="@totalPages" PageSizeCallBack="HandlePageSize" CurrentPageCallBack="HandleCurrentPage" @ref = "paginationComponent"></PaginationComponent>
 *@

@code {

    private int totalPages;

    private int pageSize;

    private int currentPage;

    private List<User> listUsers = new List<User>();    

    private string? filteredUsers = "";

    private SearchBarComponent? searchBarComponent;

    private UserListComponent? userListComponent;

    // new addition
    private PaginationComponent? paginationComponent;

    // new addition
    public void HandleClearSearchBar()
    {
        userListComponent?.ClearSorting();
    }

    public void HandleSorting()
    {
        paginationComponent?.setCurrentPage(1);
    }

    public void HandleSearchUser(string userFilterData)
    {
        filteredUsers = userFilterData;
    }

    private void HandleTotalPage(int totalPages)
    {
        this.totalPages = totalPages;
        //StateHasChanged();
    }

    private void HandlePageSize(int pageSize)
    {
        this.pageSize = pageSize;

        searchBarComponent?.ClearSearchBar();
        userListComponent?.ClearSorting();
        //StateHasChanged();
    }

    private void HandleCurrentPage(int currentPage)
    {
        this.currentPage = currentPage;
        //StateHasChanged();
    }







}
