@page "/users"

@inject IUsersService UsersService
@rendermode InteractiveServer

<h3>User</h3>

<SearchBarComponent SearchUsersCallBack="HandleSearchUser" @ref="searchBarComponent">
    <ElementControl>
        <a class="btn btn-outline-secondary" href="/user"> Add User </a>
    </ElementControl>
</SearchBarComponent>


<UserListComponent FilteredUsersData="@filteredUsers" PageSize="@pageSize" CurrentPage="@currentPage" TotalPagesCallBack="HandleTotalPage"></UserListComponent>

<PaginationComponent TotalPages="@totalPages" PageSizeCallBack="HandlePageSize" CurrentPageCallBack="HandleCurrentPage"></PaginationComponent>


@code {

    private int totalPages;

    private int pageSize;

    private int currentPage;

    private List<User> listUsers = new List<User>();    

    private string? filteredUsers = "";

    private SearchBarComponent? searchBarComponent;

    public void HandleSearchUser(string userFilterData)
    {

        filteredUsers = userFilterData;

    }
    
    private void HandleTotalPage(int totalPages)
    {
        this.totalPages = totalPages;
        StateHasChanged();
    }

    private void HandlePageSize(int pageSize)
    {
        this.pageSize = pageSize;
        //totalPages = (int)Math.Ceiling((double)listUsers.Count / pageSize);
        //currentPage = 1; // Reset to first page when page size changes
        StateHasChanged();
    }

    private void HandleCurrentPage(int currentPage)
    {
        this.currentPage = currentPage;
        StateHasChanged();
    }
}
