@page "/usergroups/{id:int?}"

@inject IStoresService StoresService
@inject IUserGroupService UserGroupService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>UserGroups</h3>

 
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Index
            </th>
            <th>
                Store
            </th>
            <th>
                Group
            </th>
            <th>
                Role
            </th>
            <th>
            </th>

        </tr>
    </thead>
    <tbody>
        @if (listUserGroup != null && listUserGroup.Count > 0)
        {
            int i = 0;
            @foreach (var userGroup in listUserGroup)
            {

                <tr>
                    <td>
                        @(++i)
                    </td>
                    <td>
                        @if(userGroup.Store != null)
                        {
                            <InputSelect @bind-Value="userGroup.StoreId" class="form-select">

                                @foreach (var store in listStores)
                                {
                                    <option value="@store.StoreId">@store.Name</option>
                                }
                            </InputSelect>
                        }
                        else
                        {
                            <span class="text-muted">No Store Data</span>
                        }
                    </td>
                    <td>
                       
                        <InputSelect @bind-Value="userGroup.GroupName" class="form-select">

                            @foreach (var groupName in listGroupName)
                            {
                                <option value="@groupName">@groupName</option>
                            }
                        </InputSelect>
                    </td>
                    <td>
                        <InputSelect @bind-Value="userGroup.RoleName" class="form-select">

                            @foreach (var roleName in listRoleName)
                            {
                                <option value="@roleName">@roleName</option>
                            }
                        </InputSelect>
                    </td>

                    <td>
                        <button type="button" class="btn btn-outline-danger">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td class="text-center text-black-50" colspan="4">
                    @statusUserListView
                </td>
            </tr>
        }

    </tbody>

</table>


@if (this.listUserGroup != null && listUserGroup.Count > 0)
{
    <a class="btn btn-primary" href=@($"/user/{Id}")> Back </a>

}
&nbsp
<button type="button" class="btn btn-primary"> Add Group</button>
&nbsp
<button type="button" class="btn btn-primary" @onclick="() => SaveUserGroupChange()"> Save</button>

@code {
    [Parameter]
    public int? Id { get; set; }

    private string statusUserListView = "Data Is Loading...";

    private List<Store> listStores = new List<Store>();

    private List<UserGroup>? listUserGroup = new List<UserGroup>();

    private List<string> listGroupName = new List<string>
    {
        "Manager",
        "Staff"
    };  

    private List<string> listRoleName = new List<string>
    {
        "Admin",
        "Staff"
    };


    protected override void OnParametersSet()
    {
        if (this.Id.HasValue)
        {
            listUserGroup = UserGroupService.GetUserGroupsByUserId(this.Id.Value);
            if (listUserGroup != null && listUserGroup.Count > 0)
            {
                statusUserListView = "Data Loaded Successfully";
                listStores = StoresService.GetStores();
                StateHasChanged();
            }
            else
            {
                statusUserListView = "No User Groups Found";
            }
        }
        else
        {
            listUserGroup = new List<UserGroup>();
        }
    }


    private void SaveUserGroupChange()
    {
        if(listUserGroup != null && listUserGroup.Count > 0)
        {
            foreach(var userGroup in listUserGroup)
            {
                UserGroupService.UpdateUserGroup(userGroup.UserGroupId,userGroup);
            }
            statusUserListView = "User Groups Updated Successfully";
            StateHasChanged();

        }
        else
        {
            statusUserListView = "No User Groups to Update";
        }
        NavigationManager.NavigateTo("/users");
    }

}
